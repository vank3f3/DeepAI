# .github/workflows/build.yml
name: Build

on:
  push:
    branches:
      - '*'
  workflow_dispatch:  # 支持手动触发

jobs:
  setup:
    name: Setup Build Environment
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set version
        id: set-version
        run: |
          echo "version=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # 允许部分失败不影响其他构建
      matrix:
        include:
          - os: windows
            arch: amd64
            ext: .exe
            goos: windows
            goarch: amd64
          - os: windows
            arch: 386
            ext: .exe
            goos: windows
            goarch: 386
          - os: linux
            arch: amd64
            ext: ""
            goos: linux
            goarch: amd64
          - os: linux
            arch: 386
            ext: ""
            goos: linux
            goarch: 386
          - os: linux
            arch: arm64
            ext: ""
            goos: linux
            goarch: arm64
          - os: darwin
            arch: amd64
            ext: ""
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            ext: ""
            goos: darwin
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          cache: true

      - name: Get dependencies
        run: |
          go mod tidy

      - name: Build for ${{ matrix.os }}-${{ matrix.arch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ needs.setup.outputs.version }}
        run: |
          BINARY_NAME="DeepAI-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}"
          go build -ldflags "-X main.Version=$VERSION" -o "$BINARY_NAME"
          if [ "${{ matrix.os }}" != "windows" ]; then
            chmod +x "$BINARY_NAME"
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DeepAI-${{ matrix.os }}-${{ matrix.arch }}-${{ needs.setup.outputs.version }}
          path: DeepAI-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          retention-days: 90

  package-all:
    name: Package All Artifacts
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
          pattern: DeepAI-*-${{ needs.setup.outputs.version }}
          merge-multiple: true

      - name: Create Release Package
        run: |
          cd binaries
          zip -r ../DeepAI-all-platforms-${{ needs.setup.outputs.version }}.zip .

      - name: Upload Combined Package
        uses: actions/upload-artifact@v4
        with:
          name: DeepAI-all-platforms-${{ needs.setup.outputs.version }}
          path: DeepAI-all-platforms-${{ needs.setup.outputs.version }}.zip
          retention-days: 90
